<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveModifiedFiles</string>
	<key>command</key>
	<string># Source some support functions we need.
. "${TM_SUPPORT_PATH}/lib/html.sh"

# Get the viewer program. Any program (that works with open -a &lt;name&gt;) can be used,
# except 'html' which is reserved to mean the internal HTML window. This is also the
# default option.
V=${TM_LATEX_VIEWER:=html}

# Set up some variables we need.
TEX=${TM_LATEX_COMPILER:=pdflatex}
EL=${TM_LATEX_ERRLVL:=1}
M=${TM_LATEX_MASTER:=${TM_FILEPATH%.*}.tex}
DIR=`dirname "$M"`
FILE=`basename "$M"`
PDF="${FILE%.tex}.pdf"
CWD="`pwd`/"

# Switch to the right directory.
cd "$TM_PROJECT_DIRECTORY"
cd "$DIR"

# Prepare output window.
htmlHeader "Compiling LaTeX (file $FILE)"
echo '&lt;h1&gt;Compiling LaTeX...&lt;/h1&gt;'

# Check if we actually have a tex compiler
require_cmd "$TEX" "You can either set the &lt;tt&gt;TM_LATEX_COMPILER&lt;/tt&gt; variable to the full path of your LaTeX compiler (e.g. &lt;tt&gt;/opt/local/bin/pdflatex&lt;/tt&gt; or set the &lt;tt&gt;PATH&lt;/tt&gt; variable to include the path of &lt;tt&gt;pdflatex&lt;/tt&gt;."

# Function to close window if the error level is low enough.
close() {
	if (($RC &lt;= $EL)); then closeWindow; fi
}

run_tex () {
if [ "$TEX" != latexmk.pl ]
	then "$TEX" ${TM_LATEX_OPTIONS:=-interaction=nonstopmode -file-line-error-style} "$1"
	else "$TEX" -f -r "${TM_BUNDLE_PATH}/latexmkrc" "$1"
fi
}

# Compile. Bail out on errors.
run_tex "$FILE" 2&gt;&amp;1| latexErrWarnHtml.py -v
RC=$?

if (($RC &gt;= 2)); then exit; fi

</string>
	<key>dontFollowNewOutput</key>
	<integer>0</integer>
	<key>input</key>
	<string>none</string>
	<key>name</key>
	<string>Typeset</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>scope</key>
	<string>text.sweave</string>
	<key>uuid</key>
	<string>2E0BB0AC-1EC8-4CBE-85DB-7D4B2679CC82</string>
</dict>
</plist>
